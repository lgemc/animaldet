# Patcher Configuration
# Extract patches from large images with optional annotations

# Input/Output paths
images_root: ${oc.env:DATA_DIR,./data}/images
dest_dir: ${oc.env:DATA_DIR,./data}/patches

# Patch parameters
patch_size: 512  # Height and width of patches in pixels
overlap: 0       # Overlap between patches in pixels

# Optional annotation handling
csv_path: null           # Path to CSV with annotations
                         # Point format: images, x, y, labels (optional)
                         # Bbox format: images, x_min, y_min, x_max, y_max, labels (optional)
min_visibility: 0.1      # Minimum fraction of annotation area to keep (for bbox format)
min_area_ratio: 0.0      # Minimum ratio of cropped bbox area to original bbox area (0.0-1.0)
                         # Filters out bboxes that are cropped too small (e.g., 0.5 = keep only if >50% visible)
save_all: false          # If false, only save patches with annotations

# Column mapping (optional)
# Use this to map CSV columns to standard format (images, x_min, y_min, x_max, y_max, labels)
# If null, CSV is expected to already use standard column names
column_mapping: null
# Example for alternative format (Image, x1, y1, x2, y2, Label):
# column_mapping:
#   Image: images
#   x1: x_min
#   y1: y_min
#   x2: x_max
#   y2: y_max
#   Label: labels

# Example usage:
# python tools/patcher.py
# python tools/patcher.py images_root=/path/to/images patch_size=512 overlap=64
# python tools/patcher.py csv_path=/path/to/annotations.csv save_all=false
